{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23","program":"/usr/bin/rls","arguments":["--crate-name","libmimalloc_sys","--edition=2018","/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=0b4ce9fb322a7f37","-C","extra-filename=-0b4ce9fb322a7f37","--out-dir","/home/gocode/scripts/RustChessEngine/Walleye/target/rls/debug/deps","-L","dependency=/home/gocode/scripts/RustChessEngine/Walleye/target/rls/debug/deps","--cap-lints","allow","-L","native=/home/gocode/scripts/RustChessEngine/Walleye/target/rls/debug/build/libmimalloc-sys-27a904eea5ea3d51/out","-l","static=mimalloc","--error-format=json","--sysroot","/usr"],"output":"/home/gocode/scripts/RustChessEngine/Walleye/target/rls/debug/deps/liblibmimalloc_sys-0b4ce9fb322a7f37.rmeta"},"prelude":{"crate_id":{"name":"libmimalloc_sys","disambiguator":[11029396406310876216,0]},"crate_root":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src","external_crates":[{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8409233030577615130,0]}},{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4579003643753663494,0]}},{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16538850339997899097,0]}}],"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":0,"byte_end":3718,"line_start":1,"line_end":105,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":0,"byte_end":3718,"line_start":1,"line_end":105,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":8},"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":349,"byte_end":358,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"mi_zalloc","qualname":"::mi_zalloc","value":"pub unsafe extern \"C\" fn mi_zalloc(size: usize) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Allocate zero-initialized `size` bytes.","sig":null,"attributes":[{"value":"/ Allocate zero-initialized `size` bytes.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":182,"byte_end":225,"line_start":12,"line_end":12,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":230,"byte_end":233,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Returns a pointer to newly allocated zero-initialized memory, or null if","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":238,"byte_end":314,"line_start":14,"line_end":14,"column_start":5,"column_end":81}},{"value":"/ out of memory.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":319,"byte_end":337,"line_start":15,"line_end":15,"column_start":5,"column_end":23}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":9},"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":571,"byte_end":580,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"mi_malloc","qualname":"::mi_malloc","value":"pub unsafe extern \"C\" fn mi_malloc(size: usize) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Allocate `size` bytes.","sig":null,"attributes":[{"value":"/ Allocate `size` bytes.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":393,"byte_end":419,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":424,"byte_end":427,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Returns pointer to the allocated memory or null if out of memory.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":432,"byte_end":501,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ Returns a unique pointer if called with `size` 0.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":506,"byte_end":559,"line_start":21,"line_end":21,"column_start":5,"column_end":58}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":10},"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1142,"byte_end":1152,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"mi_realloc","qualname":"::mi_realloc","value":"pub unsafe extern \"C\" fn mi_realloc(p: *mut c_void, newsize: usize)\n-> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Re-allocate memory to `newsize` bytes.","sig":null,"attributes":[{"value":"/ Re-allocate memory to `newsize` bytes.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":615,"byte_end":657,"line_start":24,"line_end":24,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":662,"byte_end":665,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Return pointer to the allocated memory or null if out of memory. If null","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":670,"byte_end":746,"line_start":26,"line_end":26,"column_start":5,"column_end":81}},{"value":"/ is returned, the pointer `p` is not freed. Otherwise the original","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":751,"byte_end":820,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ pointer is either freed or returned as the reallocated result (in case","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":825,"byte_end":899,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ it fits in-place with the new size).","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":904,"byte_end":944,"line_start":29,"line_end":29,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":949,"byte_end":952,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ If `p` is null, it behaves as [`mi_malloc`]. If `newsize` is larger than","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":957,"byte_end":1033,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ the original `size` allocated for `p`, the bytes after `size` are","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1038,"byte_end":1107,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/ uninitialized.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1112,"byte_end":1130,"line_start":33,"line_end":33,"column_start":5,"column_end":23}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":11},"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1435,"byte_end":1452,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"mi_zalloc_aligned","qualname":"::mi_zalloc_aligned","value":"pub unsafe extern \"C\" fn mi_zalloc_aligned(size: usize, alignment: usize)\n-> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Allocate `size` bytes aligned by `alignment`, initialized to zero.","sig":null,"attributes":[{"value":"/ Allocate `size` bytes aligned by `alignment`, initialized to zero.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1206,"byte_end":1276,"line_start":36,"line_end":36,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1281,"byte_end":1284,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Return pointer to the allocated memory or null if out of memory.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1289,"byte_end":1357,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1362,"byte_end":1365,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Returns a unique pointer if called with `size` 0.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1370,"byte_end":1423,"line_start":40,"line_end":40,"column_start":5,"column_end":58}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":12},"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1713,"byte_end":1730,"line_start":48,"line_end":48,"column_start":12,"column_end":29},"name":"mi_malloc_aligned","qualname":"::mi_malloc_aligned","value":"pub unsafe extern \"C\" fn mi_malloc_aligned(size: usize, alignment: usize)\n-> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Allocate `size` bytes aligned by `alignment`.","sig":null,"attributes":[{"value":"/ Allocate `size` bytes aligned by `alignment`.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1505,"byte_end":1554,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1559,"byte_end":1562,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Return pointer to the allocated memory or null if out of memory.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1567,"byte_end":1635,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1640,"byte_end":1643,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Returns a unique pointer if called with `size` 0.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1648,"byte_end":1701,"line_start":47,"line_end":47,"column_start":5,"column_end":58}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":13},"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2342,"byte_end":2360,"line_start":60,"line_end":60,"column_start":12,"column_end":30},"name":"mi_realloc_aligned","qualname":"::mi_realloc_aligned","value":"pub unsafe extern \"C\" fn mi_realloc_aligned(p: *mut c_void, newsize: usize,\n                                            alignment: usize) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Re-allocate memory to `newsize` bytes, aligned by `alignment`.","sig":null,"attributes":[{"value":"/ Re-allocate memory to `newsize` bytes, aligned by `alignment`.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1783,"byte_end":1849,"line_start":50,"line_end":50,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1854,"byte_end":1857,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Return pointer to the allocated memory or null if out of memory. If null","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1862,"byte_end":1938,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ is returned, the pointer `p` is not freed. Otherwise the original","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":1943,"byte_end":2012,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ pointer is either freed or returned as the reallocated result (in case","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2017,"byte_end":2091,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ it fits in-place with the new size).","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2096,"byte_end":2136,"line_start":55,"line_end":55,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2141,"byte_end":2144,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `p` is null, it behaves as [`mi_malloc_aligned`]. If `newsize` is","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2149,"byte_end":2221,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ larger than the original `size` allocated for `p`, the bytes after","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2226,"byte_end":2296,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ `size` are uninitialized.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2301,"byte_end":2330,"line_start":59,"line_end":59,"column_start":5,"column_end":34}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":14},"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2559,"byte_end":2566,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"mi_free","qualname":"::mi_free","value":"pub unsafe extern \"C\" fn mi_free(p: *mut c_void)","parent":null,"children":[],"decl_id":null,"docs":" Free previously allocated memory.","sig":null,"attributes":[{"value":"/ Free previously allocated memory.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2432,"byte_end":2469,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2474,"byte_end":2477,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The pointer `p` must have been allocated before (or be null).","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2482,"byte_end":2547,"line_start":64,"line_end":64,"column_start":5,"column_end":70}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":15},"span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2730,"byte_end":2744,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"mi_usable_size","qualname":"::mi_usable_size","value":"pub unsafe extern \"C\" fn mi_usable_size(p: *const c_void) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the available bytes in a memory block.","sig":null,"attributes":[{"value":"/ Return the available bytes in a memory block.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2589,"byte_end":2638,"line_start":67,"line_end":67,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2643,"byte_end":2646,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The returned size can be used to call `mi_expand` successfully.","span":{"file_name":"/home/gocode/.cargo/registry/src/github.com-1ecc6299db9ec823/libmimalloc-sys-0.1.23/src/lib.rs","byte_start":2651,"byte_end":2718,"line_start":69,"line_end":69,"column_start":5,"column_end":72}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}